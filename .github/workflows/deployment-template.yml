name: OpenSearch and OpenSearch Dashboards Deployment Template

on:
  workflow_call:
    inputs:
      helm-repo:
        required: true
        type: string
      deploy-env:
        required: true
        type: string
    secrets:
      access-key-id:
        required: true
      secret-access-key:
        required: true
      region:
        required: true
      kube-config:
        required: true
      openid_client_id:
        required: false
      openid_client_secret:
        required: false
      openid_base_redirect_url:
        required: false
      openid_logout_url:
        required: false
      ga-tracking-id:
        required: false
      osd_user: 
        required: false
      osd_user_password:
        required: false
      otel_root_ca:
        required: false
      otel_data_prepper_cert:
        required: false
      kibanaserver:
        required: true
      esnode_cert:
        required: false
      esnode_key_cert:
        required: false
      root_ca_cert:
        required: false   
jobs:

  OS-OSD-Deployment:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Step 1 - Replace Tokens for helm chart configuration
        if: ${{ (inputs.deploy-env == 'preview') || (inputs.deploy-env == 'searchapps') || (inputs.deploy-env == 'observability') }}
        uses: cschleiden/replace-tokens@v1
        with:
          files: '["${{ github.workspace }}/config/playground/helm/${{inputs.deploy-env}}/helm-opensearch-dashboards.yaml"]'
          tokenPrefix: '${'
          tokenSuffix: '}'
        env:
          OPENID_CLIENT_ID: ${{ secrets.openid_client_id }}
          OPENID_CLIENT_SECRET: ${{ secrets.openid_client_secret }}
          OPENID_BASE_REDIRECT_URL: ${{ secrets.openid_base_redirect_url }}
          OPENID_LOGOUT_URL: ${{ secrets.openid_logout_url }}
          GA_TRACKING_ID: ${{ secrets.ga-tracking-id }}
          KIBANASERVER: ${{ secrets.kibanaserver }}

      - name: Step 2 - Replace Token in opensearch.yml
        if: ${{ (inputs.deploy-env == 'preview') || (inputs.deploy-env == 'searchapps') }}
        uses: cschleiden/replace-tokens@v1
        with:
          files: '["${{ github.workspace }}/config/playground/helm/${{inputs.deploy-env}}/helm-opensearch.yaml"]'
          tokenPrefix: '${'
          tokenSuffix: '}'
        env:
          ESNODE_CERT: ${{ secrets.esnode_cert }}
          ESNODE_KEY_CERT: ${{ secrets.esnode_key_cert }}
          ROOT_CA_CERT: ${{ secrets.root_ca_cert }}

      - name: Step 3 - Replace Tokens for dashboards
        uses: cschleiden/replace-tokens@v1
        with:
          files: '["${{ github.workspace }}/config/playground/helm/${{inputs.deploy-env}}/helm-opensearch-dashboards.yaml"]'
          tokenPrefix: '${'
          tokenSuffix: '}'
        env:
          KIBANASERVER: ${{ secrets.kibanaserver }}
          GA_TRACKING_ID: ${{ secrets.ga-tracking-id }}

      - name: Step 4 - Replace Tokens for logstash configuration
        if: ${{ (inputs.deploy-env == 'preview') || (inputs.deploy-env == 'searchapps') || (inputs.deploy-env == 'observability') }}
        uses: cschleiden/replace-tokens@v1
        with:
          files: '["${{ github.workspace }}/config/playground/metrics/logstash/preview/logstash.yaml"]'
          tokenPrefix: '${'
          tokenSuffix: '}'
        env:
          OSD_USER: ${{ secrets.osd_user }}
          OSD_USER_PASSWORD: ${{ secrets.osd_user_password }}

      - name: Step 5 - Replace Tokens for tracing configuration
        if: ${{ (inputs.deploy-env == 'preview') || (inputs.deploy-env == 'searchapps') || (inputs.deploy-env == 'observability') }}
        uses: cschleiden/replace-tokens@v1
        with:
          files: '["${{ github.workspace }}/config/playground/metrics/tracing/preview/otel-config.yaml"]'
          tokenPrefix: '${'
          tokenSuffix: '}'
        env:
          OSD_USER: ${{ secrets.osd_user }}
          OSD_USER_PASSWORD: ${{ secrets.osd_user_password }}
          OTEL_ROOT_CA: ${{ secrets.otel_root_ca }}
          OTEL_DATA_PREPPER_CERT: ${{ secrets.otel_data_prepper_cert }}

      - name: Step 6 - Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.access-key-id }}
          aws-secret-access-key: ${{ secrets.secret-access-key }}
          aws-region: ${{ secrets.region }}

      - name: Step 7 - Delete Logstash
        if: ${{ (inputs.deploy-env == 'preview') || (inputs.deploy-env == 'searchapps') || (inputs.deploy-env == 'observability') }}
        uses: elastic-analytics/dashboards-action@main
        env:
          KUBE_CONFIG_DATA: ${{ secrets.kube-config }}
        with:
          plugins: ""
          command: |
            kubectl delete ns logstash

      - name: Step 8 - Delete Tracing
        if: ${{ (inputs.deploy-env == 'preview') || (inputs.deploy-env == 'searchapps') || (inputs.deploy-env == 'observability') }}
        uses: elastic-analytics/dashboards-action@main
        env:
          KUBE_CONFIG_DATA: ${{ secrets.kube-config }}
        with:
          plugins: ""
          command: |
            kubectl delete -f config/playground/metrics/tracing/preview/jaeger-agent.yaml
            kubectl delete -f config/playground/metrics/tracing/preview/otel-config.yaml
            kubectl delete -f config/playground/metrics/tracing/preview/otel-collector.yaml
            kubectl delete -f config/playground/metrics/tracing/preview/data-prepper.yaml

      - name: Step 9 - Deploy OpenSearch and OpenSearch Dashboards By Helm Chart
        if: ${{ (inputs.deploy-env == 'searchapps') || (inputs.deploy-env == 'preview') || (inputs.deploy-env == 'observability')}}
        uses: elastic-analytics/dashboards-action@main
        env:
          KUBE_CONFIG_DATA: ${{ secrets.kube-config }}
        with:
          plugins: "" # optional, list of Helm plugins. eg. helm-secrets or helm-diff.
          # Teardown the current OS and OSD and then install the lastest version
          # of OS and OSD as it only takes 23 seconds for the process, will add
          # blue/green deployment later.
          command: |
            helm repo add opensearch ${{ inputs.helm-repo }}
            helm repo update
            helm search repo opensearch
            kubectl get nodes
            helm uninstall opensearch --namespace default
            helm uninstall dashboards --namespace default
            kubectl get pvc | grep opensearch-cluster-leader-opensearch-cluster-leader- | awk '{print $1}'| xargs kubectl delete pvc
            helm install opensearch opensearch/opensearch -f config/playground/helm/${{inputs.deploy-env}}/helm-opensearch.yaml
            helm install dashboards opensearch/opensearch-dashboards -f config/playground/helm/${{inputs.deploy-env}}/helm-opensearch-dashboards.yaml

      - name: Step 10 - Deploy OpenSearch/OpenSearch Dashboards/ML By Helm Chart
        if: ${{ (inputs.deploy-env == 'dev') || (inputs.deploy-env == 'prod') || (inputs.deploy-env == 'ml') }}
        uses: elastic-analytics/dashboards-action@main
        env:
          KUBE_CONFIG_DATA: ${{ secrets.kube-config }}
        with:
          plugins: "" # optional, list of Helm plugins. eg. helm-secrets or helm-diff.
          # Teardown the current OS and OSD and then install the lastest version
          # of OS and OSD as it only takes 23 seconds for the process, will add
          # blue/green deployment later.
          command: |
            helm repo add opensearch ${{ inputs.helm-repo }}
            helm repo update
            helm search repo opensearch
            kubectl get nodes
            helm uninstall opensearch --namespace default
            helm uninstall dashboards --namespace default
            helm uninstall machinelearning --namespace default
            kubectl get pvc | grep opensearch-cluster-leader-opensearch-cluster-leader- | awk '{print $1}'| xargs kubectl delete pvc
            kubectl get pvc | grep opensearch-cluster-machinelearning-opensearch-cluster-machinelearning- | awk '{print $1}'| xargs kubectl delete pvc
            helm install opensearch opensearch/opensearch -f config/playground/helm/${{inputs.deploy-env}}/helm-opensearch.yaml
            helm install dashboards opensearch/opensearch-dashboards -f config/playground/helm/${{inputs.deploy-env}}/helm-opensearch-dashboards.yaml
            helm install machinelearning opensearch/opensearch -f config/playground/helm/${{inputs.deploy-env}}/helm-machinelearning.yaml

      - name: Step 11 - Install Logstash
        if: ${{ (inputs.deploy-env == 'preview') || (inputs.deploy-env == 'searchapps') || (inputs.deploy-env == 'observability') }}
        uses: elastic-analytics/dashboards-action@main
        env:
          KUBE_CONFIG_DATA: ${{ secrets.kube-config }}
        with:
          plugins: ""
          command: |
            kubectl create ns logstash
            kubectl create -f config/playground/metrics/logstash/preview/logstash-configmap.yaml
            kubectl apply -f config/playground/metrics/logstash/preview/logstash.yaml

      - name: Step 12 - Install Tracing
        if: ${{ (inputs.deploy-env == 'preview') || (inputs.deploy-env == 'searchapps') || (inputs.deploy-env == 'observability') }}
        uses: elastic-analytics/dashboards-action@main
        env:
          KUBE_CONFIG_DATA: ${{ secrets.kube-config }}
        with:
          plugins: ""
          command: |
            kubectl apply -f config/playground/metrics/tracing/preview/jaeger-agent.yaml
            kubectl create -f config/playground/metrics/tracing/preview/otel-config.yaml
            kubectl apply -f config/playground/metrics/tracing/preview/otel-collector.yaml
            kubectl apply -f config/playground/metrics/tracing/preview/data-prepper.yaml
